#! /usr/bin/env python
#
# hntool - A hardening tool for Linux/BSD
# Copyright (C) 2009 Hugo Doria <mail@hugodoria.org>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#

import sys, os
sys.path.append(os.path.dirname(os.path.realpath(__file__))+"/lib")

import hntool.util
import getopt
import hntool
import string


# Return all possible modules (rules)
def get_modules():
	'''Method to return all modules available'''
	return hntool.__all__

# vars
use_colors = True # using colors by default
hntool_version = 0.1

#TODO: define one error code for each error to allow automatic interactions.

# yes, only unix for now
if not hntool.util.is_unix():
	print >> sys.stderr, 'Error: You must have a Unix(-like) box. (No candy for you)'
	sys.exit(2)

# checking if we are root. we need to be. oh yeah, baby.
if not hntool.util.is_root():
	print >> sys.stderr, 'Error: You must be root to run hntool'
	print >> sys.stderr, ''
	print >> sys.stderr, hntool.util.usage()
	sys.exit(2)

# get our options and process them
try:
	optlist, args = getopt.getopt(sys.argv[1:], "lhn", ["list","help","nocolors"])
except getopt.GetoptError:
	hntool.util.usage()

output_type = 'terminal'
output_conf = { 'use_colors':True }

for i, k in optlist:
	# Show all available modules (rules) and its description
	if i in ('-l','--list'):
		print "-"*20 + " hntool rule list " + "-"*20

		for module in get_modules():
			print string.ljust(module, 20) + ": " + __import__('hntool.' + \
					module, globals(), locals(), [hntool]).rule().long_name()

		sys.exit(2)

	# do not use colors
	if i in ('-n', '--nocolors'):
		output_conf['use_colors'] = False

	# show help
	if i in ('-h', '--help'):
		hntool.util.usage()

  # select the output type, like term, html, pdf,...
	if i in ('-t','--output_type'):
		output_type = k

# status message must not go to stdout to not mess with the output format.
print >> sys.stderr, '[ Starting hntool checks... ]'

# Run all the modules and its checks.
# The results of each module goes to "report"
report = []
for module in get_modules():
	module = __import__('hntool.' + module ,globals(), locals(), [hntool]).rule()
	report.append({ 'title':module.long_name(), 'results':module.analyze() })

output_format = __import__('output.' + output_type,
                           globals(), locals(), [hntool]).format()

output_format.output( report, output_conf )

